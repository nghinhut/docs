@startuml
title Query Users

!if (%file_exists("../shared/functions.iuml"))
    !include ../shared/functions.iuml
!else
    !include https://gitlab.com/nghinhut/docs/raw/master/plantuml/shared/functions.iuml
!endif

participant "Client" as client
participant "IdM Service" as idm
participant "Shared Cache\n(optional)" as cache
participant "Database" as db
participant "UMA2 Authorization Server" as as
participant "Encryption Service" as es

ref over client, idm, as
    [[$getBaseUrl()/plantuml/IdM/create-permission-ticket.function.puml{} Create Permission Ticket]] with resources scopes = [ 'list-users' ]
end

client ->> idm : list users with limit & offset
activate idm

alt query by UUID (unprotected field) (cache first)
    idm -> cache : getCachedUserByUUID()
    activate cache
        idm <-- cache : cached user
    deactivate cache

    opt no cached user
        ref over idm, db
            [[$getBaseUrl()/plantuml/IdM/query-encrypted-users.function.puml Query Encrypted Users]] by UUID
        end

        loop for each attribute in user's attributes
            ref over idm, es
                Decrypt user's attribute by [[$getBaseUrl()/plantuml/IdM/decryption.function.puml{} Decryption(attribute)]]
            end

            idm -> idm : userMsg.set(attribute //<decrypted>//, value)
        end
    end
else search users (include protected fields) (Database first)
    ref over idm, db
        [[$getBaseUrl()/plantuml/IdM/query-encrypted-users.function.puml Query Encrypted Users]] from Database
    end

    loop for each user in users <//encrypted//>
        ref over idm, cache
            getCachedUser()
        end
        opt if not cached
            loop for each attribute in user's attributes
                ref over idm, es
                    Decrypt user's attribute by [[$getBaseUrl()/plantuml/IdM/decryption.function.puml{} Decryption(attribute)]]
                end

                idm -> idm : userMsg.set(attribute //<decrypted>//, value)
            end
        end
    end
end

client <<-- idm : send users

deactivate idm
@enduml
