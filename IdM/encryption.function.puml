@startuml
'-----START auto generated metadata please keep comment here to allow auto update-----
'-----DON'T EDIT THIS SECTION, INSTEAD RE-RUN prebuild.sh TO UPDATE-----
header [[https://www.nghinhut.dev?from=http%5C%3A%5C%2F%5C%2Fwww%5C.plantuml%5C.com%5C%2Fplantuml%5C%2Fproxy%3Ffmt%3Dsvg%5C%26src%3Dhttps%5C%3A%5C%2F%5C%2Fgitlab%5C.com%5C%2Fnghinhut%5C%2Fdocs%5C%2Fraw%5C%2Fbca2d67a787faf185d4d8bfe45e7be42643d6ded%5C%2FIdM%5C%2Fencryption%5C.puml%0A @nghinhut]]
footer [[http://www.plantuml.com/plantuml/proxy?fmt=svg&src=https://gitlab.com/nghinhut/docs/raw/bca2d67a787faf185d4d8bfe45e7be42643d6ded/IdM/encryption.puml https://gitlab.com/nghinhut/docs/blob/bca2d67a787faf185d4d8bfe45e7be42643d6ded/IdM/encryption.puml]]
'-----END auto generated metadata please keep comment here to allow auto update-----
title IdM Encryption Function
participant "IdM Service" as idm
participant "Encryption Service" as es
actor "Security Admin" as esAdmin

es <- esAdmin : create a key with key name (Ex: keyname: 'idm-key01') (anytime)

idm ->> idm : encrypted1 = serviceEncrypt('chacha20-poly1305', $text, $serviceKey)
note left
    serviceKey is a random string secret
    generated by Service's Maintainer/Admin
    and pass though environment variable at runtime
end note

idm ->> idm : encrypted2 = externalEncrypt(encrypted1)
activate idm
    idm ->> es : request encrypt with keyname = 'idm-key01'
        es -> es : encrypt([[https://www.vaultproject.io/docs/secrets/transit/index.html#chacha20-poly1305{ChaCha20-Poly1305 with a 256-bit key} 'ChaCha20-Poly1305']], $text //<encrypted>//, $masterKey)
        note right
            master key are private at Encryption Service
            only Security Admin has access.
            ...
            POST /transit/encrypt/:name

            [[https://www.vaultproject.io/api/secret/transit/index.html#encrypt-data ref: Encrypt Data API]]
        end note
    idm <<-- es : return encrypted string (encrypted2 value)
deactivate idm
@enduml